services:
  #  frontend:
  #    build: ./frontend
  #    command: npm start
  #    ports: 
  #      - 6969:3000
  #    depends_on:
  #      api:
  #        condition: service_healthy
  #        restart: true
  #    develop:
  #      watch:
  #        - action: sync+restart
  #          path: ./frontend
  #          target: /frontend
  #          ignore: 
  #          - node_modules/
  #        - action: rebuild
  #          path: ./frontend/DockerFile
  api:
    build:
      context: ./api/
    ports:
      - 6969:8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/healthcheck"]
      interval: 60s
      timeout: 5s
      retries: 10
    develop:
      watch:
        - action: sync
          path: ./api
          target: /api
          ignore: 
          - __pycache__/
        - action: rebuild
          path: ./api/Dockerfile
        - action: rebuild
          path: ./docker-compose.yml

  ai_server: 
    build: ./ai_server
    env_file: "./ai_server/.env"
    ports:
      - 4242:4242
    healthcheck:
      interval: 2s
      timeout: 10s
      retries: 10
    devices:
      - /dev/kfd
      - /dev/dri
    security_opt:
      - seccomp=unconfined
    develop:
      watch:
        - action: sync+restart
          path: ./ai_server
          target: /ai_server
        - action: rebuild
          path: ./ai_server/requirements.txt
        - action: rebuild
          path: ./docker-compose.yml
